webpackJsonp([1],{"52eC":function(t,s){},"8LoE":function(t,s){},L6J1:function(t,s){},NHnr:function(t,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var e=a("7+uW"),i=a("zL8q"),r=a.n(i),v=(a("tvR6"),{render:function(){var t=this.$createElement,s=this._self._c||t;return s("div",{attrs:{id:"app"}},[s("router-view")],1)},staticRenderFns:[]});var o=a("VU/8")({name:"App"},v,!1,function(t){a("L6J1")},null,null).exports,c=a("/ocq"),l={render:function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{attrs:{id:"main"}},[a("header",{staticClass:"page-header",attrs:{role:"banner"}},[a("h1",{staticClass:"project-name"},[t._v("joker")]),t._v(" "),a("h2",{staticClass:"project-tagline"},[t._v("一个快速架构微服务的服务容器")]),t._v(" "),a("a",{staticClass:"btn",on:{click:function(s){t.$router.push("/use")}}},[t._v("开始使用")]),t._v(" "),a("a",{staticClass:"btn space",attrs:{href:"https://github.com/jsen-joker/Joker"}},[t._v("Github")]),t._v(" "),a("a",{staticClass:"btn",attrs:{href:"https://github.com/jsen-joker/Joker/zipball/master"}},[t._v("下载 .zip")]),t._v(" "),a("a",{staticClass:"btn",attrs:{href:"https://github.com/jsen-joker/Joker/tarball/master"}},[t._v("下载 .tar.gz")])]),t._v(" "),t._m(0),t._v(" "),t._m(1)])},staticRenderFns:[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",{staticClass:"start"},[t._v("快速开始")]),t._v(" "),a("div",{staticClass:"page-home-start",staticStyle:{width:"650px"}},[a("code",[a("div",{staticClass:"page-home-comment"},[t._v("// 下载")]),t._v(" "),a("div",[a("div",{staticClass:"pl-smi"},[t._v("git clone https://github.com/jsen-joker/Joker.git")]),t._v(" "),a("div",{staticClass:"pl-smi"},[t._v("cd Joker/joker/bin")])]),t._v(" "),a("div",{staticClass:"page-home-comment"},[t._v("// 安装依赖（基于mvn）")]),t._v(" "),a("div",[a("div",{staticClass:"pl-smi"},[t._v("./joker.sh install")])]),t._v(" "),a("div",{staticClass:"page-home-comment"},[t._v("// 运行、停止")]),t._v(" "),a("div",[a("div",{staticClass:"pl-smi"},[t._v("./startup.sh")]),t._v(" "),a("div",{staticClass:"pl-smi"},[t._v("./shutdown.sh")]),t._v(" "),a("div",{staticClass:"pl-smi"},[t._v("./joker.sh start / stop")])])])]),t._v(" "),a("p",{staticClass:"start small"},[t._v("特性介绍")]),t._v(" "),a("div",{staticClass:"group"},[a("div",{staticClass:"item"},[t._v("\n        joker 是一个轻量级的微服务容器，专为微服务开发而生。作为一个容器，他与tomcat，docker等有什么不同。首先joker的宗旨是快速实现想要的业务模块，快速编程、快速部署。其次相较于tomcat，tomcat中发布的单位是一个个独立的网站，相互之间想要有关量，只能通过http请求和基于java的消息服务等，而joker的目标是开发一个微服务框架，所有的微服务可以在这个框架上运行，可以相互间直接调用（这里的直接调用包括但不局限于、直接的java调用，vertx的代理、eventbus调用），二docker作为一个粗粒度的容器，同样无法在通讯方面有很好的作为，joker基于vertx开发，继承了vertx的集群模式下可以直接通过eventbus访问的特点，可以非常容易的部署服务集群、并在服务间交互。而相交于spring体系，joker、vertx有着全新的不同开发模式，完全的异步化，对于熟悉node、promise的人来说非常易于上手、对于不熟悉异步开发的人，其实异步只要入门，可以非常方便的开发，而且在joker下开发，你会喜欢上jdk8的特性。 joker的核心原理就是将所有的java字节码加载在同一个classloader下。\n      ")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("footer",{staticClass:"page-home-footer"},[s("a",{attrs:{href:"https://github.com/jsen-joker/Joker"}},[this._v("© Joker")])])}]};var n=a("VU/8")({name:"index"},l,!1,function(t){a("8LoE")},"data-v-b33584e2",null).exports,_={render:function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{attrs:{id:"use"}},[a("el-container",[a("el-aside",{staticClass:"sider sidebar"},[a("div",{staticClass:"search"},[a("div",{staticClass:"input-wrap"},[a("input",{attrs:{type:"search",value:"",placeholder:"搜索"}}),t._v(" "),a("div",{staticClass:"clear-button"},[a("svg",{attrs:{width:"26",height:"24"}},[a("circle",{attrs:{cx:"12",cy:"12",r:"11",fill:"#ccc"}}),t._v(" "),a("path",{attrs:{stroke:"white","stroke-width":"2",d:"M8.25,8.25,15.75,15.75"}}),t._v(" "),a("path",{attrs:{stroke:"white","stroke-width":"2",d:"M8.25,15.75,15.75,8.25"}})])])]),t._v(" "),a("div",{staticClass:"results-panel"})]),t._v(" "),a("h1",[a("a",{staticClass:"app-name-link",attrs:{"data-nosearch":"",href:"/"}},[t._v("Joker")])]),t._v(" "),a("div",{staticClass:"sidebar-nav"},[a("ul",[a("li",[a("p",[t._v("入门")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#/use/quick-start"}},[t._v("快速开始")])])])])])])]),t._v(" "),a("el-main",[a("router-view",{staticClass:"u-c-t"})],1)],1)],1)},staticRenderFns:[]};var p=a("VU/8")({name:"useComponent"},_,!1,function(t){a("52eC")},"data-v-57902660",null).exports,d={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{attrs:{id:"quick-start"}},[a("div",{staticClass:"t-title"},[t._v("快速开始")]),t._v(" "),a("div",{staticClass:"t-tips"},[t._v("1、下载源码")]),t._v(" "),a("div",{staticClass:"t-part"},[a("div",{staticClass:"t-code"},[t._v("git clone https://github.com/jsen-joker/Joker.git")])]),t._v(" "),a("div",{staticClass:"t-tips"},[t._v("2、目录解释")]),t._v(" "),a("div",{staticClass:"t-tips t-small"},[t._v("下载源码，进入根目录后你将得到一个joker的目录，在改目录下是joker服务器的最终目录结构，在该目录下，要运行joker容器的核心jar包包括joker-boot.jar、lib/joker-core.jar，lib/joker-program-api（此处省略版本名字）。")]),t._v(" "),a("div",{staticClass:"t-tips t-small"},[t._v("joker的目录结构类似于tomcat，bin是joker的命令文件，entry下是部署的微服务模块，static下会动态解析符合joker格式微服务的静态资源（html等）")]),t._v(" "),a("div",{staticClass:"t-tips"},[t._v("3、快速体验")]),t._v(" "),a("div",{staticClass:"t-tips t-smaller"},[t._v("进入到joker目录下并依次执行以下命令")]),t._v(" "),a("div",{staticClass:"t-part"},[a("div",{staticClass:"t-code"},[t._v("cd joker/bin")]),t._v(" "),a("div",{staticClass:"t-commen"},[t._v("/**  启动joker  **/")]),t._v(" "),a("div",{staticClass:"t-code"},[t._v("./startup.sh")]),t._v(" "),a("div",{staticClass:"t-commen"},[t._v("/**  停止joker  **/")]),t._v(" "),a("div",{staticClass:"t-code"},[t._v("./shutdown.sh")])]),t._v(" "),a("div",{staticClass:"t-tips t-smaller"},[t._v("访问管理台，joker提供了一些默认的微服务，一般命名为joker-core-plugin-xxx.jar，这里joker提供了一些方便的微服务可以来管理和查看后台运行的服务。")]),t._v(" "),a("div",{staticClass:"t-tips t-smaller"},[t._v("启动joker后访问 "),a("a",{attrs:{href:"http://localhost:9090"}},[t._v("http://localhost:9090")]),t._v(" 即可看到joker的管理台，所有这些插件的源码都在源码包下可查看。")]),t._v(" "),a("div",{staticClass:"t-tips"},[t._v("4、joker核心插件简介")]),t._v(" "),a("div",{staticClass:"t-tips t-smaller"},[t._v("joker核心插件的端口可以在conf目录下设置，以下按joker的默认设置进行介绍。")]),t._v(" "),a("div",{staticClass:"t-tips t-smaller"},[a("a",{attrs:{href:"http://localhost:9090"}},[t._v("http://localhost:9090")]),t._v(" manager-master 的微服务和管理界面")]),t._v(" "),a("div",{staticClass:"t-tips t-smaller"},[a("a",{attrs:{href:"http://localhost:9091"}},[t._v("http://localhost:9091")]),t._v(" manager节点的端口，收到manager-master节点管理，一个manager节点代表一个joker容器")]),t._v(" "),a("div",{staticClass:"t-tips t-smaller"},[a("a",{attrs:{href:"http://localhost:9092"}},[t._v("http://localhost:9092")]),t._v(" joker微服务上传下载的微服务，用户可以把自己的微服务上传到该服务下，并在manager-master节点下分发服务，自动部署运行")])])}]};var h=a("VU/8")({name:"quick-start"},d,!1,function(t){a("qAv+")},"data-v-32e0114c",null).exports;e.default.use(c.a);var m=new c.a({routes:[{path:"/",name:"Index",component:n},{path:"/use",name:"Use",component:p,children:[{path:"quick-start",name:"QuickStart",component:h},{path:"",name:"QuickStart",component:h}]}]});e.default.use(r.a),e.default.config.productionTip=!1,new e.default({el:"#app",router:m,components:{App:o},template:"<App/>"})},"qAv+":function(t,s){},tvR6:function(t,s){}},["NHnr"]);
//# sourceMappingURL=app.85b9519cc0e1d66a0e0f.js.map